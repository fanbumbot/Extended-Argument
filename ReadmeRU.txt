С помощью инклюда ExtendedArguments Вы сможете проще взаимодействовать с аргументами
функций. Инклюд предназначен для опытных разработчиков, которые взаимодействуют
с ассемблерной частью Pawn, ассемблером Pawn.

Произвольные и непроизвольные аргументы.
Function(a, b, c, ...)

Непроизвольные аргуенты - те аргументы, которые Вы указываете явно (a, b, c).
Произвольные аргменты - аргументы, которые не обязательно указывать
(все аргументы, которые будут записаны после c).

Чтобы начать работу, вызовите функцию инициализации InitArgumentMarker, которая выставит
указатель необязательных аргументов на нужный адрес и далее будет знать о том,
сколько всего этих необязательных аргументов. В качестве параметра функция
принимает номер аргумента (считая с нуля), начиная с которого будут идти
необязательные аргументы, или - что то же самое - количество обязательных аргментов.
Функция будет иметь в виду только ту функцию, из которой произошёл вызов,
после этого Вы сможете использовать большую часть остальных функций.

Функции без инициализации:
AddressCall() - Эмуляция CALL - занесите в стек все необходимые параметры, их
длину (как если бы Вы самостоятельно пытались передать управление), а так же в самом
конце адрес, на который будет вызван CALL.

AddressCode(address) - возвращает адрес относительно DAT
address - адрес относительно COD

MemCopyA(addr_to, addr_from, numbytes) - копирует numbytes байт из адреса addr_from
в адрес addr_to.

MemCopy(addr_to[], addr_from[], index_to, index_from, numbytes) - копирует numbytes
байт из адреса (addr_from+[index_from]) в адрес (addr_to+[index_to])

strlenA(address) - возвращает разницу между адресом и ближайшей по возрастанию
ячейкой со значением '0'. Иначе говоря - длину. Длина указывается в ячейках
(в одной ячейке 4 байта).

Функции с инициализацией:
GetArgumentMarker() - возвращает адрес, где на данный момент находится указатель,
если не выставлен - возвращает нуль.

GetArgumentNum() - возвращает количество произвольных аргументов, если указатель
не выставлен - возвращает нуль.

GetArgument(arg) - возвращает значение аргумента, если указатель
не выставлен - возвращает нуль.
arg - номер аргумента
return = [x+(arg*4)], x - оффсет начала аргументов

GetArgumentRef(arg) - возвращает содержимое адреса по значению аргумента, если указатель
не выставлен - возвращает нуль.
arg - номер аргумента
return = [[x+(arg*4)]], x - оффсет начала аргументов

ArgumentPush(num=cellmax) - заносит в стек все произвольные параметры, указанные
при инициализации. Возвращает 0, если не было инициализации, иначе 1.
num - количество параметров, которые нужно заносить (считая с первых).

ArgumentNumPush() - заносит в стек количество параметров, указанных при инициализации.
Возвращает 0, если не было инициализации, иначе 1.

ArgumentFormat(string[], templ[], string_s = sizeof(string)) - создаёт
форматированную строку из произвольных параметров, указанных при инициализации.
string - строка, куда будет помещён текст, string_s - длина этой строки,
templ - шаблон. Возвращает 0, если не было инициализации, иначе 1.
Шаблон работает по тому же принципу как в стандартных функциях CallLocalFunction,
CallRemoteFunction, SetTimerEx. К ним добавляется "массив" - 'a[x]', где x -
количество символов начиная с начала, которые будут отображены. Также строки и
"массивы" по итогу будут заключены в одинарные скобки.
Функция подразумевалась как упрощение для составления SQL запроса.
Символы шаблона:
	i - целое число
	f - дробное число
	s - строка
	a[x] - массив размера x

